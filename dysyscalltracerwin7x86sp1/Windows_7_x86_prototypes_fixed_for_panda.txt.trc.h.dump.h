#ifndef __DEFX_H__
#define __DEFX_H__
#include "stdio.h"
#include "stdint.h"
#include "panda/plugin.h"

extern FILE *outFile;

typedef unsigned int NTSTATUS;
typedef unsigned int PVOID;
typedef unsigned long uint64_t;
typedef long int64_t;
typedef unsigned int uint32_t;
typedef int int32_t;
typedef short int16_t;
typedef unsigned short uint16_t;
typedef PVOID HANDLE;
typedef uint32_t PHANDLE;
typedef uint32_t PWSTR;
typedef uint8_t BYTE;
typedef struct _UNICODE_STRING {
uint16_t Length;
uint16_t MaximumLength;
PWSTR Buffer;
} UNICODE_STRING;
typedef uint32_t PUNICODE_STRING;
typedef struct _OBJECT_ATTRIBUTES {
uint32_t Length;
HANDLE RootDirectory;
PUNICODE_STRING ObjectName;
uint32_t Attributes;
PVOID SecurityDescriptor;
PVOID SecurityQualityOfService;
} OBJECT_ATTRIBUTES;
typedef uint32_t POBJECT_ATTRIBUTES;
typedef uint32_t ALPC_MESSAGE_INFORMATION_CLASS;
typedef uint32_t PLUID;
typedef uint32_t PTOKEN_SOURCE;
typedef int32_t LONG;
typedef uint32_t PLONG;
typedef uint32_t TRANSACTIONMANAGER_INFORMATION_CLASS;
typedef uint32_t ACCESS_MASK;
typedef uint32_t RTL_ATOM;
typedef uint32_t PBOOT_ENTRY;
typedef uint32_t KAFFINITY;
typedef uint32_t PSECURITY_DESCRIPTOR;
typedef uint32_t SEMAPHORE_INFORMATION_CLASS;
typedef uint32_t BOOLEAN;
typedef uint32_t ALPC_HANDLE;
typedef uint32_t LCID;
typedef uint32_t PALPC_MESSAGE_ATTRIBUTES;
typedef uint32_t TRANSACTION_INFORMATION_CLASS;
typedef uint32_t PKEY_VALUE_ENTRY;
typedef uint32_t POWER_ACTION;
typedef uint32_t PIO_STATUS_BLOCK;
typedef uint32_t PFILE_IO_COMPLETION_INFORMATION;
typedef uint32_t JOBOBJECTINFOCLASS;
typedef uint32_t PFILE_SEGMENT_ELEMENT;
typedef uint32_t IO_SESSION_STATE;
typedef struct _LARGE_INTEGER {
int64_t QuadPart;
} LARGE_INTEGER;
typedef uint32_t PLARGE_INTEGER;
typedef uint32_t PCRM_PROTOCOL_ID;
typedef uint32_t MEMORY_INFORMATION_CLASS;
typedef uint32_t TOKEN_TYPE;
typedef uint32_t WORKERFACTORYINFOCLASS;
typedef uint32_t PCHAR;
typedef uint32_t PBOOT_OPTIONS;
typedef uint32_t SYSDBG_COMMAND;
typedef struct _RTL_USER_PROCESS_PARAMETERS {
 BYTE Reserved1[16];
 PVOID Reserved2[10];
UNICODE_STRING ImagePathName;
UNICODE_STRING CommandLine;
} RTL_USER_PROCESS_PARAMETERS;
typedef uint32_t PRTL_USER_PROCESS_PARAMETERS;
typedef uint32_t SECTION_INFORMATION_CLASS;
typedef uint32_t FS_INFORMATION_CLASS;
typedef uint32_t TIMER_INFORMATION_CLASS;
typedef uint32_t PSECURITY_QUALITY_OF_SERVICE;
typedef uint32_t PTIMER_APC_ROUTINE;
typedef uint32_t ULONG_PTR;
typedef uint32_t PDBGUI_WAIT_STATE_CHANGE;
typedef uint32_t WIN32_PROTECTION_MASK;
typedef uint32_t APPHELPCOMMAND;
typedef uint32_t PTOKEN_OWNER;
typedef uint32_t LANGID;
typedef uint32_t PROCESSINFOCLASS;
typedef uint32_t POBJECT_TYPE_LIST;
typedef uint32_t SECURITY_INFORMATION;
typedef uint32_t NOTIFICATION_MASK;
typedef uint32_t ATOM_INFORMATION_CLASS;
typedef uint32_t PTRANSACTION_NOTIFICATION;
typedef uint32_t FILE_INFORMATION_CLASS;
typedef uint32_t PFILE_NETWORK_OPEN_INFORMATION;
typedef uint32_t PSID;
typedef uint32_t PCLIENT_ID;
typedef uint32_t KPROFILE_SOURCE;
typedef uint32_t PALPC_PORT_ATTRIBUTES;
typedef uint32_t PTOKEN_PRIVILEGES;
typedef uint32_t IO_COMPLETION_INFORMATION_CLASS;
typedef uint32_t RESOURCEMANAGER_INFORMATION_CLASS;
typedef uint32_t PEXECUTION_STATE;
typedef uint32_t LPGUID;
typedef uint32_t KEY_SET_INFORMATION_CLASS;
typedef uint32_t PBOOLEAN;
typedef uint32_t DEVICE_POWER_STATE;
typedef uint32_t PEXCEPTION_RECORD;
typedef uint32_t PPROCESS_CREATE_INFO;
typedef uint32_t PRTL_ATOM;
typedef uint32_t PORT_INFORMATION_CLASS;
typedef uint32_t TIMER_TYPE;
typedef uint32_t PTOKEN_USER;
typedef uint32_t PGENERIC_MAPPING;
typedef uint32_t THREADINFOCLASS;
typedef uint32_t SECTION_INHERIT;
typedef uint32_t SYSTEM_INFORMATION_CLASS;
typedef uint32_t MEMORY_RESERVE_TYPE;
typedef uint32_t TIMER_SET_INFORMATION_CLASS;
typedef uint32_t KEY_VALUE_INFORMATION_CLASS;
typedef uint32_t ALPC_PORT_INFORMATION_CLASS;
typedef uint32_t PPORT_MESSAGE;
typedef uint32_t PCONTEXT;
typedef uint32_t PKTMOBJECT_CURSOR;
typedef struct _ULARGE_INTEGER {
uint64_t QuadPart;
} ULARGE_INTEGER;
typedef uint32_t PULARGE_INTEGER;
typedef uint32_t KEY_INFORMATION_CLASS;
typedef uint32_t PPLUGPLAY_EVENT_BLOCK;
typedef uint32_t ENLISTMENT_INFORMATION_CLASS;
typedef uint32_t PLUGPLAY_CONTROL_CLASS;
typedef uint32_t ULONG;
typedef uint32_t PULONG;
typedef uint32_t EXECUTION_STATE;
typedef uint32_t SHUTDOWN_ACTION;
typedef uint32_t PSIZE_T;
typedef uint32_t PUSHORT;
typedef uint32_t VDMSERVICECLASS;
typedef uint32_t PPROCESS_ATTRIBUTE_LIST;
typedef uint32_t PALPC_HANDLE;
typedef uint32_t PLCID;
typedef uint32_t PTOKEN_PRIMARY_GROUP;
typedef uint32_t EVENT_INFORMATION_CLASS;
typedef uint32_t PULONG_PTR;
typedef uint32_t PJOB_SET_ARRAY;
typedef uint32_t AUDIT_EVENT_TYPE;
typedef uint32_t PPS_APC_ROUTINE;
typedef uint32_t OBJECT_INFORMATION_CLASS;
typedef uint32_t PEFI_DRIVER_ENTRY;
typedef uint32_t PACCESS_MASK;
typedef uint32_t PPRIVILEGE_SET;
typedef uint32_t PNTSTATUS;
typedef uint32_t KTMOBJECT_TYPE;
typedef uint32_t SYSTEM_POWER_STATE;
typedef uint32_t PPS_ATTRIBUTE_LIST;
typedef uint32_t PALPC_SECURITY_ATTR;
typedef uint32_t PPORT_VIEW;
typedef uint32_t PFILE_PATH;
typedef uint32_t PIO_APC_ROUTINE;
typedef uint32_t PALPC_DATA_VIEW_ATTR;
typedef uint32_t WAIT_TYPE;
typedef uint32_t PTOKEN_DEFAULT_DACL;
typedef uint32_t PINITIAL_TEB;
typedef uint32_t PFILE_BASIC_INFORMATION;
typedef uint32_t PALPC_CONTEXT_ATTR;
typedef uint32_t DEBUGOBJECTINFOCLASS;
typedef uint32_t TOKEN_INFORMATION_CLASS;
typedef uint32_t PREMOTE_PORT_VIEW;
typedef uint32_t EVENT_TYPE;
typedef uint32_t PTOKEN_GROUPS;
typedef uint32_t SIZE_T;
typedef uint32_t POWER_INFORMATION_LEVEL;
typedef uint32_t MUTANT_INFORMATION_CLASS;
typedef uint32_t PGROUP_AFFINITY;
void dump_PWSTR(CPUState *cpu, uint32_t param);
void dump_uint32_t(CPUState *cpu, uint32_t param);
void dump_int32_t(CPUState *cpu, int32_t param);
void dump_uint64_t(CPUState *cpu, uint64_t param);
void dump_int64_t(CPUState *cpu, int64_t param);
void dump_uint16_t(CPUState *cpu, uint16_t param);
void dump_int16_t(CPUState *cpu, int16_t param);
void dump_uint8_t(CPUState *cpu, uint8_t param);
void dump_int8_t(CPUState *cpu, int8_t param);
void dump_NTSTATUS(CPUState *cpu, NTSTATUS param);
void dump_PVOID(CPUState *cpu, PVOID param);
void dump_HANDLE(CPUState *cpu, HANDLE param);
void dump_PHANDLE(CPUState *cpu, uint32_t param);
void dump_BYTE(CPUState *cpu, BYTE param);
void dump_UNICODE_STRING(CPUState *cpu, UNICODE_STRING &param);
void dump_PUNICODE_STRING(CPUState *cpu, uint32_t param);
void dump_OBJECT_ATTRIBUTES(CPUState *cpu, OBJECT_ATTRIBUTES &param);
void dump_POBJECT_ATTRIBUTES(CPUState *cpu, uint32_t param);
void dump_ALPC_MESSAGE_INFORMATION_CLASS(CPUState *cpu, ALPC_MESSAGE_INFORMATION_CLASS param);
void dump_PLUID(CPUState *cpu, PLUID param);
void dump_PTOKEN_SOURCE(CPUState *cpu, PTOKEN_SOURCE param);
void dump_LONG(CPUState *cpu, LONG param);
void dump_PLONG(CPUState *cpu, uint32_t param);
void dump_TRANSACTIONMANAGER_INFORMATION_CLASS(CPUState *cpu, TRANSACTIONMANAGER_INFORMATION_CLASS param);
void dump_ACCESS_MASK(CPUState *cpu, ACCESS_MASK param);
void dump_RTL_ATOM(CPUState *cpu, RTL_ATOM param);
void dump_PBOOT_ENTRY(CPUState *cpu, PBOOT_ENTRY param);
void dump_KAFFINITY(CPUState *cpu, KAFFINITY param);
void dump_PSECURITY_DESCRIPTOR(CPUState *cpu, PSECURITY_DESCRIPTOR param);
void dump_SEMAPHORE_INFORMATION_CLASS(CPUState *cpu, SEMAPHORE_INFORMATION_CLASS param);
void dump_BOOLEAN(CPUState *cpu, BOOLEAN param);
void dump_ALPC_HANDLE(CPUState *cpu, ALPC_HANDLE param);
void dump_LCID(CPUState *cpu, LCID param);
void dump_PALPC_MESSAGE_ATTRIBUTES(CPUState *cpu, PALPC_MESSAGE_ATTRIBUTES param);
void dump_TRANSACTION_INFORMATION_CLASS(CPUState *cpu, TRANSACTION_INFORMATION_CLASS param);
void dump_PKEY_VALUE_ENTRY(CPUState *cpu, PKEY_VALUE_ENTRY param);
void dump_POWER_ACTION(CPUState *cpu, POWER_ACTION param);
void dump_PIO_STATUS_BLOCK(CPUState *cpu, PIO_STATUS_BLOCK param);
void dump_PFILE_IO_COMPLETION_INFORMATION(CPUState *cpu, PFILE_IO_COMPLETION_INFORMATION param);
void dump_JOBOBJECTINFOCLASS(CPUState *cpu, JOBOBJECTINFOCLASS param);
void dump_PFILE_SEGMENT_ELEMENT(CPUState *cpu, PFILE_SEGMENT_ELEMENT param);
void dump_IO_SESSION_STATE(CPUState *cpu, IO_SESSION_STATE param);
void dump_LARGE_INTEGER(CPUState *cpu, LARGE_INTEGER &param);
void dump_PLARGE_INTEGER(CPUState *cpu, uint32_t param);
void dump_PCRM_PROTOCOL_ID(CPUState *cpu, PCRM_PROTOCOL_ID param);
void dump_MEMORY_INFORMATION_CLASS(CPUState *cpu, MEMORY_INFORMATION_CLASS param);
void dump_TOKEN_TYPE(CPUState *cpu, TOKEN_TYPE param);
void dump_WORKERFACTORYINFOCLASS(CPUState *cpu, WORKERFACTORYINFOCLASS param);
void dump_PCHAR(CPUState *cpu, PCHAR param);
void dump_PBOOT_OPTIONS(CPUState *cpu, PBOOT_OPTIONS param);
void dump_SYSDBG_COMMAND(CPUState *cpu, SYSDBG_COMMAND param);
void dump_RTL_USER_PROCESS_PARAMETERS(CPUState *cpu, RTL_USER_PROCESS_PARAMETERS &param);
void dump_PRTL_USER_PROCESS_PARAMETERS(CPUState *cpu, uint32_t param);
void dump_SECTION_INFORMATION_CLASS(CPUState *cpu, SECTION_INFORMATION_CLASS param);
void dump_FS_INFORMATION_CLASS(CPUState *cpu, FS_INFORMATION_CLASS param);
void dump_TIMER_INFORMATION_CLASS(CPUState *cpu, TIMER_INFORMATION_CLASS param);
void dump_PSECURITY_QUALITY_OF_SERVICE(CPUState *cpu, PSECURITY_QUALITY_OF_SERVICE param);
void dump_PTIMER_APC_ROUTINE(CPUState *cpu, PTIMER_APC_ROUTINE param);
void dump_ULONG_PTR(CPUState *cpu, ULONG_PTR param);
void dump_PDBGUI_WAIT_STATE_CHANGE(CPUState *cpu, PDBGUI_WAIT_STATE_CHANGE param);
void dump_WIN32_PROTECTION_MASK(CPUState *cpu, WIN32_PROTECTION_MASK param);
void dump_APPHELPCOMMAND(CPUState *cpu, APPHELPCOMMAND param);
void dump_PTOKEN_OWNER(CPUState *cpu, PTOKEN_OWNER param);
void dump_LANGID(CPUState *cpu, LANGID param);
void dump_PROCESSINFOCLASS(CPUState *cpu, PROCESSINFOCLASS param);
void dump_POBJECT_TYPE_LIST(CPUState *cpu, POBJECT_TYPE_LIST param);
void dump_SECURITY_INFORMATION(CPUState *cpu, SECURITY_INFORMATION param);
void dump_NOTIFICATION_MASK(CPUState *cpu, NOTIFICATION_MASK param);
void dump_ATOM_INFORMATION_CLASS(CPUState *cpu, ATOM_INFORMATION_CLASS param);
void dump_PTRANSACTION_NOTIFICATION(CPUState *cpu, PTRANSACTION_NOTIFICATION param);
void dump_FILE_INFORMATION_CLASS(CPUState *cpu, FILE_INFORMATION_CLASS param);
void dump_PFILE_NETWORK_OPEN_INFORMATION(CPUState *cpu, PFILE_NETWORK_OPEN_INFORMATION param);
void dump_PSID(CPUState *cpu, PSID param);
void dump_PCLIENT_ID(CPUState *cpu, PCLIENT_ID param);
void dump_KPROFILE_SOURCE(CPUState *cpu, KPROFILE_SOURCE param);
void dump_PALPC_PORT_ATTRIBUTES(CPUState *cpu, PALPC_PORT_ATTRIBUTES param);
void dump_PTOKEN_PRIVILEGES(CPUState *cpu, PTOKEN_PRIVILEGES param);
void dump_IO_COMPLETION_INFORMATION_CLASS(CPUState *cpu, IO_COMPLETION_INFORMATION_CLASS param);
void dump_RESOURCEMANAGER_INFORMATION_CLASS(CPUState *cpu, RESOURCEMANAGER_INFORMATION_CLASS param);
void dump_PEXECUTION_STATE(CPUState *cpu, PEXECUTION_STATE param);
void dump_LPGUID(CPUState *cpu, LPGUID param);
void dump_KEY_SET_INFORMATION_CLASS(CPUState *cpu, KEY_SET_INFORMATION_CLASS param);
void dump_PBOOLEAN(CPUState *cpu, PBOOLEAN param);
void dump_DEVICE_POWER_STATE(CPUState *cpu, DEVICE_POWER_STATE param);
void dump_PEXCEPTION_RECORD(CPUState *cpu, PEXCEPTION_RECORD param);
void dump_PPROCESS_CREATE_INFO(CPUState *cpu, PPROCESS_CREATE_INFO param);
void dump_PRTL_ATOM(CPUState *cpu, PRTL_ATOM param);
void dump_PORT_INFORMATION_CLASS(CPUState *cpu, PORT_INFORMATION_CLASS param);
void dump_TIMER_TYPE(CPUState *cpu, TIMER_TYPE param);
void dump_PTOKEN_USER(CPUState *cpu, PTOKEN_USER param);
void dump_PGENERIC_MAPPING(CPUState *cpu, PGENERIC_MAPPING param);
void dump_THREADINFOCLASS(CPUState *cpu, THREADINFOCLASS param);
void dump_SECTION_INHERIT(CPUState *cpu, SECTION_INHERIT param);
void dump_SYSTEM_INFORMATION_CLASS(CPUState *cpu, SYSTEM_INFORMATION_CLASS param);
void dump_MEMORY_RESERVE_TYPE(CPUState *cpu, MEMORY_RESERVE_TYPE param);
void dump_TIMER_SET_INFORMATION_CLASS(CPUState *cpu, TIMER_SET_INFORMATION_CLASS param);
void dump_KEY_VALUE_INFORMATION_CLASS(CPUState *cpu, KEY_VALUE_INFORMATION_CLASS param);
void dump_ALPC_PORT_INFORMATION_CLASS(CPUState *cpu, ALPC_PORT_INFORMATION_CLASS param);
void dump_PPORT_MESSAGE(CPUState *cpu, PPORT_MESSAGE param);
void dump_PCONTEXT(CPUState *cpu, PCONTEXT param);
void dump_PKTMOBJECT_CURSOR(CPUState *cpu, PKTMOBJECT_CURSOR param);
void dump_ULARGE_INTEGER(CPUState *cpu, ULARGE_INTEGER &param);
void dump_PULARGE_INTEGER(CPUState *cpu, uint32_t param);
void dump_KEY_INFORMATION_CLASS(CPUState *cpu, KEY_INFORMATION_CLASS param);
void dump_PPLUGPLAY_EVENT_BLOCK(CPUState *cpu, PPLUGPLAY_EVENT_BLOCK param);
void dump_ENLISTMENT_INFORMATION_CLASS(CPUState *cpu, ENLISTMENT_INFORMATION_CLASS param);
void dump_PLUGPLAY_CONTROL_CLASS(CPUState *cpu, PLUGPLAY_CONTROL_CLASS param);
void dump_ULONG(CPUState *cpu, ULONG param);
void dump_PULONG(CPUState *cpu, uint32_t param);
void dump_EXECUTION_STATE(CPUState *cpu, EXECUTION_STATE param);
void dump_SHUTDOWN_ACTION(CPUState *cpu, SHUTDOWN_ACTION param);
void dump_PSIZE_T(CPUState *cpu, PSIZE_T param);
void dump_PUSHORT(CPUState *cpu, PUSHORT param);
void dump_VDMSERVICECLASS(CPUState *cpu, VDMSERVICECLASS param);
void dump_PPROCESS_ATTRIBUTE_LIST(CPUState *cpu, PPROCESS_ATTRIBUTE_LIST param);
void dump_PALPC_HANDLE(CPUState *cpu, PALPC_HANDLE param);
void dump_PLCID(CPUState *cpu, PLCID param);
void dump_PTOKEN_PRIMARY_GROUP(CPUState *cpu, PTOKEN_PRIMARY_GROUP param);
void dump_EVENT_INFORMATION_CLASS(CPUState *cpu, EVENT_INFORMATION_CLASS param);
void dump_PULONG_PTR(CPUState *cpu, PULONG_PTR param);
void dump_PJOB_SET_ARRAY(CPUState *cpu, PJOB_SET_ARRAY param);
void dump_AUDIT_EVENT_TYPE(CPUState *cpu, AUDIT_EVENT_TYPE param);
void dump_PPS_APC_ROUTINE(CPUState *cpu, PPS_APC_ROUTINE param);
void dump_OBJECT_INFORMATION_CLASS(CPUState *cpu, OBJECT_INFORMATION_CLASS param);
void dump_PEFI_DRIVER_ENTRY(CPUState *cpu, PEFI_DRIVER_ENTRY param);
void dump_PACCESS_MASK(CPUState *cpu, PACCESS_MASK param);
void dump_PPRIVILEGE_SET(CPUState *cpu, PPRIVILEGE_SET param);
void dump_PNTSTATUS(CPUState *cpu, PNTSTATUS param);
void dump_KTMOBJECT_TYPE(CPUState *cpu, KTMOBJECT_TYPE param);
void dump_SYSTEM_POWER_STATE(CPUState *cpu, SYSTEM_POWER_STATE param);
void dump_PPS_ATTRIBUTE_LIST(CPUState *cpu, PPS_ATTRIBUTE_LIST param);
void dump_PALPC_SECURITY_ATTR(CPUState *cpu, PALPC_SECURITY_ATTR param);
void dump_PPORT_VIEW(CPUState *cpu, PPORT_VIEW param);
void dump_PFILE_PATH(CPUState *cpu, PFILE_PATH param);
void dump_PIO_APC_ROUTINE(CPUState *cpu, PIO_APC_ROUTINE param);
void dump_PALPC_DATA_VIEW_ATTR(CPUState *cpu, PALPC_DATA_VIEW_ATTR param);
void dump_WAIT_TYPE(CPUState *cpu, WAIT_TYPE param);
void dump_PTOKEN_DEFAULT_DACL(CPUState *cpu, PTOKEN_DEFAULT_DACL param);
void dump_PINITIAL_TEB(CPUState *cpu, PINITIAL_TEB param);
void dump_PFILE_BASIC_INFORMATION(CPUState *cpu, PFILE_BASIC_INFORMATION param);
void dump_PALPC_CONTEXT_ATTR(CPUState *cpu, PALPC_CONTEXT_ATTR param);
void dump_DEBUGOBJECTINFOCLASS(CPUState *cpu, DEBUGOBJECTINFOCLASS param);
void dump_TOKEN_INFORMATION_CLASS(CPUState *cpu, TOKEN_INFORMATION_CLASS param);
void dump_PREMOTE_PORT_VIEW(CPUState *cpu, PREMOTE_PORT_VIEW param);
void dump_EVENT_TYPE(CPUState *cpu, EVENT_TYPE param);
void dump_PTOKEN_GROUPS(CPUState *cpu, PTOKEN_GROUPS param);
void dump_SIZE_T(CPUState *cpu, SIZE_T param);
void dump_POWER_INFORMATION_LEVEL(CPUState *cpu, POWER_INFORMATION_LEVEL param);
void dump_MUTANT_INFORMATION_CLASS(CPUState *cpu, MUTANT_INFORMATION_CLASS param);
void dump_PGROUP_AFFINITY(CPUState *cpu, PGROUP_AFFINITY param);
#endif
